{
    "name": "Bruter",
    "scopeName": "source.bruter",
    "patterns": [
      {
        "include": "#variables"
      },
      {
        "include": "#keywords"
      },
      {
        "include": "#strings"
      },
      {
        "include": "#numbers"
      },
      {
        "include": "#comments"
      },
      {
        "include": "#functions"
      }
    ],
    "repository": {
      "variables": {
        "patterns": [
          {
            "name": "variable.other.bruter",
            "match": "\\$[a-zA-Z_][a-zA-Z0-9_]*"
          }
        ]
      },
      "keywords": {
        "patterns": [
          {
            "name": "keyword.control.bruter",
            "match": "\\b(from|while|until|for|each|\\s+in\\s+|print|else|if\\s*|set\\s*|loop\\s+|loop{|using\\s*\\b)"
          }
        ]
      },
      "strings": {
        "patterns": [
          {
            "name": "string.quoted.single.bruter",
            "begin": "`",
            "end": "`"
          }
          
        ]
      },
      "numbers": {
        "patterns": [
          {
            "name": "constant.numeric.bruter",
            "match": "-?\\b\\d+\\b"
          }
        ]
      },
      "comments": {
        "patterns": [
          {
            "name": "comment.line.double-slash.bruter",
            "begin": "//",
            "end": ";"
          }
        ]
      },
      "functions": {
        "patterns": [
          {

            "name": "entity.name.function.bruter",
            "match": "\\b(STATE|SET|INSERT|DELETE|MOVE|SWAP|SHIFT|RANDOM|COPY|FILL|REVERSE|SORT|FIND|IF|EQUAL|NOT_EQUAL|GREATER|LESS|GREATER_OR_EQUAL|LESS_OR_EQUAL|AND|OR|PRINT|SCAN|GOTO|ADD|SUB|MUL|DIV|INCREMENT|DECREMENT|MOD|POW|SQRT|ABS|MIN|MAX|RANDOM|ROUND|FLOOR|CEIL|TRUNC|SIN|COS|TAN|ASIN|ACOS|ATAN|ATAN2|SINH|COSH|TANH|EXP|FREXP|LDEXP|LOG|LOG2|LOG10|LOAD|SAVE)\\b"
          }
        ]
      }
    },
    "scopeName": "source.bruter",
    "fileTypes": ["br"],
    "uuid": "00000000-0000-0000-0000-000000000000"
  }
  