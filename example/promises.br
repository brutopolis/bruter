using promise;

set _promises from [];
set _data from vm.effil.table (obj utils $utils.array);

// currently multithread does only support lua functions;
set test from lua.function {data index}
{
    local i = 0;
    for k = 1, 100000099 do
        i = i * i/8 + 1;
    end
    
    print ("thread " .. index .. " done");
    return i;
};
// bruter functions cannot be dumped;
// set test from function {data index}
{
    set i 0;
    loop
    {
        set i (/ (* $i $i) 8);
        set i (+ $i 1);
    } for {set k 1} {< 100000099} {set k (+ $k 1)};
    print thread $index done;
    return $i;
};
help _data;
loop
{
    lua.global.table.insert $_promises (promise.new $test $_data $i);
} for {set i 1} {< $i 11} {set i (+ $i 1)};
set _results from promise.all $_promises;
help _results;